<!doctype html>
<html lang="en">

<head>
	<meta charset="utf-8">

	<title><%= title %></title>

	<meta name="description" content="A framework for easily creating beautiful presentations using HTML">
	<meta name="author" content="Hakim El Hattab">

	<meta name="apple-mobile-web-app-capable" content="yes">
	<meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">

	<meta name="viewport" content="width=device-width, initial-scale=1.0">

	<link rel="stylesheet" href="<%= rootUrl %>libs/reveal.js/4.1.3/reset.css">
	<link rel="stylesheet" href="<%= rootUrl %>libs/reveal.js/4.1.3/reveal.css">

	
	
	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css">

	  <!-- highlight Theme -->
  	<% if (highlightTheme) { %>
	  <link rel="stylesheet" href="<%= rootUrl %>libs/highlight.js/11.3.1/styles/<%=highlightTheme%>.min.css">
	<%}%>
	<% if (highlightTheme == null) { %>
	<link rel="stylesheet" href="<%= rootUrl %>libs/highlight.js/11.3.1/styles/monokai.min.css">
	<%}%>
		
	<link rel="stylesheet" href="<%= rootUrl %>libs/reveal.js/4.1.3/plugin/chalkboard/style.css">
	
	
	<% if (enableMenu ) { %>
		<link rel="stylesheet" href="<%= rootUrl %>libs/reveal.js/4.1.3/plugin/customcontrols/style.css">
	<%}%>
	<link rel="stylesheet" href="<%= rootUrl %>libs/styles/tasklist.css">



  <!-- Revealjs Theme -->
  <% if (theme) { %>
  	<link rel="stylesheet" href="<%= rootUrl %>libs/reveal.js/4.1.3/theme/<%=theme%>.css" id="theme">
  <%}%>
  <% if (!theme) { %>
  	<link rel="stylesheet" href="<%= rootUrl %>libs/reveal.js/4.1.3/theme/black.css" id="theme">
  <%}%>


  <!-- Revealjs Theme -->
  <% if (customTheme) { %>
  	<link rel="stylesheet" href="<%=customTheme%>.css">
  <%}%>

 
</head>

<body>
  <% if (logoImg) { %>
    <div id="logo" style="position: fixed; top: 20px; left: 20px; z-index: 1; height:3rem;">
        <img src="<%=logoImg%>" style="height:100%"/>
    </div>
  <% } %>


  <div class="reveal">

    <!-- Any section element inside of this container is displayed as a slide -->
    <div class="slides">

      <%- body %>

    </div>


  </div>

  	
	<script src="<%= rootUrl %>libs/reveal.js/4.1.3/reveal.js"></script>
	<% if(enableZoom) {%><script src="<%= rootUrl %>libs/reveal.js/4.1.3/plugin/zoom/zoom.js"></script><%}%>
	<script src="<%= rootUrl %>libs/reveal.js/4.1.3/plugin/notes/notes.js"></script>
	<% if(enableSearch) {%><script src="<%= rootUrl %>libs/reveal.js/4.1.3/plugin/search/search.js"></script><%}%>
	<script src="<%= rootUrl %>libs/reveal.js/4.1.3/plugin/markdown/markdown.js"></script>
	<script src="<%= rootUrl %>libs/reveal.js/4.1.3/plugin/highlight/highlight.js"></script>
	<% if(enableMenu) {%><script src="<%= rootUrl %>libs/reveal.js/4.1.3/plugin/menu/menu.js"></script><%}%>
	<script src="<%= rootUrl %>libs/reveal.js/4.1.3/plugin/math/math.js"></script>

	<script src="<%= rootUrl %>libs/reveal.js/4.1.3/plugin/fullscreen/plugin.js"></script>
  
  	<script src="<%= rootUrl %>libs/reveal.js/4.1.3/plugin/animate/plugin.js"></script>
  	<script src="<%= rootUrl %>libs/reveal.js/4.1.3/plugin/animate/svg.min.js"></script>
  
  	 <!--	<script src="<%= rootUrl %>libs/reveal.js/4.1.3/plugin/anything/plugin.js"></script> -->

 <!--	<script src="<%= rootUrl %>libs/reveal.js/4.1.3/plugin/audio-slideshow/plugin.js"></script>  -->
<!--	<script src="<%= rootUrl %>libs/reveal.js/4.1.3/plugin/audio-slideshow/recorder.js"></script>-->
<!--	<script src="<%= rootUrl %>libs/reveal.js/4.1.3/plugin/audio-slideshow/RecordRTC.js"></script>-->

<% if(enableChalkboard) {%><script src="<%= rootUrl %>libs/reveal.js/4.1.3/plugin/chalkboard/plugin.js"></script><%}%>
	<script src="<%= rootUrl %>libs/reveal.js/4.1.3/plugin/customcontrols/plugin.js"></script>
	<script src="<%= rootUrl %>libs/reveal.js/4.1.3/plugin/embed-tweet/plugin.js"></script>

	<script src="<%= rootUrl %>libs/reveal.js/4.1.3/plugin/chart/chart.min.js"></script>
	<script src="<%= rootUrl %>libs/reveal.js/4.1.3/plugin/chart/plugin.js"></script>

  <script>

		const printPlugins = [
			RevealNotes, 
			RevealHighlight,
			RevealMath,
			RevealAnimate,
			<% if(enableChalkboard) {%>RevealChalkboard, <%}%>
			RevealEmbedTweet,
			RevealChart,
		];

		const plugins =  [...printPlugins,
		<% if(enableZoom) {%>RevealZoom, <%}%>
		<% if(enableSearch) {%>RevealSearch, <%}%>
				RevealMarkdown, 
				<% if(enableMenu) {%>RevealMenu, <%}%>
				RevealFullscreen,
				//RevealAnything,
				//RevealAudioSlideshow,
				//RevealAudioRecorder,
				<% if(enableMenu) {%>RevealCustomControls, <%}%>
				// poll
				// question
				// seminar
				 ]


		// Also available as an ES module, see:
		// https://revealjs.com/initialization/
		Reveal.initialize({
			controls: <%= controls %>,
			controlsTutorial: <%= controlsTutorial %>,
			controlsLayout: '<%= controlsLayout %>',
			controlsBackArrows: '<%= controlsBackArrows %>',
			progress: <%= progress %>,
			slideNumber: <%= slideNumber %>,
			//#showSlideNumber "all" "print" "speaker"
			hash: true,//#  hash: false,
			//# respondToHashChanges: true,
			//# history: false,
			keyboard: <%= keyboard %>,
			//#keyboardCondition: null,
			overview: <%= overview %>,
			center: <%= center %>,
			touch: <%= touch %>,
			loop: <%= loop %>,
			rtl: <%= rtl %>,
			//#navigationMode: 'default', linear grid
			shuffle: <%= shuffle %>,
			fragments: <%= fragments %>,
			fragmentInURL: <%= fragmentInURL %>,
			embedded: <%= embedded %>,
			help: <%= help %>,
			//#pause: true
			showNotes: <%= showNotes %>,
			autoPlayMedia: <%= autoPlayMedia %>, // TODO fix this to a nullable value
			//#preloadIframes: null. true false
			//#autoAnimate: true
			//#autoAnimateMatcher: null,
			//#autoAnimateEasing: 'ease',
			//autoAnimateDuration: 1.0,
			//#autoAnimateUnmatched: true
			//#autoAnimateStyles: []
			autoSlide: <%= autoSlide %>, // TODO fix this to a falseable value
			autoSlideStoppable: <%= autoSlideStoppable %>,
			autoSlideMethod: '<%= autoSlide %>',
			defaultTiming: <%= defaultTiming %>,
			mouseWheel: <%= mouseWheel %>,
			//#previewLinks: false
			//#postMessage: true,  // TODO : this can cause issues with the vscode api ???
			//#postMessageEvents: false,
			//#focusBodyOnPageVisibilityChange: true,
			transition: '<%= transition %>',
			transitionSpeed: '<%= transitionSpeed %>',
			backgroundTransition: '<%= backgroundTransition %>',
			//#pdfMaxPagesPerSlide: Number.POSITIVE_INFINITY,
			//#pdfSeparateFragments: true,
			//#pdfPageHeightOffset: -1,
			viewDistance: <%= viewDistance %>,
			//#mobileViewDistance: 2,
			display: '<%= display %>',
			//#hideInactiveCursor: true,
			//#hideCursorTime: 5000

			// Parallax Background
			parallaxBackgroundImage: '<%= parallaxBackgroundImage %>',
			parallaxBackgroundSize: '<%= parallaxBackgroundSize %>',
			parallaxBackgroundHorizontal: <%= parallaxBackgroundHorizontal %>,
			parallaxBackgroundVertical: <%= parallaxBackgroundVertical %>,
			
			//Presentation Size
			width: <%= width %>,
			height: <%= height %>,
			margin: <%= margin %>,
			minScale: <%= minScale %>,
			maxScale: <%= maxScale %>,
			disableLayout: <%= disableLayout %>,

			audio: {
				prefix: 'audio/', 	// audio files are stored in the "audio" folder
				suffix: '.ogg',		// audio files have the ".ogg" ending
				textToSpeechURL: null,  // the URL to the text to speech converter
				defaultNotes: false, 	// use slide notes as default for the text to speech converter
				defaultText: false, 	// use slide text as default for the text to speech converter
				advance: 0, 		// advance to next slide after given time in milliseconds after audio has played, use negative value to not advance
				autoplay: false,	// automatically start slideshow
				defaultDuration: 5,	// default duration in seconds if no audio is available
				defaultAudios: true,	// try to play audios with names such as audio/1.2.ogg
				playerOpacity: 0.05,	// opacity value of audio player if unfocused
				playerStyle: 'position: fixed; bottom: 4px; left: 25%; width: 50%; height:75px; z-index: 33;', // style used for container of audio controls
				startAtFragment: false, // when moving to a slide, start at the current fragment or at the start of the slide
			},
			<% if(enableChalkboard) {%>
			chalkboard: { // font-awesome.min.css must be available
					//src: "chalkboard/chalkboard.json",
					storage: "chalkboard-demo",
				},
			<%}%>
			customcontrols: {
					controls: [
      						{
						  id: 'toggle-overview',
						  title: 'Toggle overview (O)',
						  icon: '<i class="fa fa-th"></i>',
						  action: 'Reveal.toggleOverview();'
						}
						<% if(enableChalkboard) {%>,
						{ icon: '<i class="fa fa-pen-square"></i>',
						  title: 'Toggle chalkboard (B)',
						  action: 'RevealChalkboard.toggleChalkboard();'
						},
						{ icon: '<i class="fa fa-pen"></i>',
						  title: 'Toggle notes canvas (C)',
						  action: 'RevealChalkboard.toggleNotesCanvas();'
						}<%}%>
				]
			},
			chart: {
					defaults: { 
						color: 'lightgray', // color of labels
						scale: { 
							beginAtZero: true, 
							ticks: { stepSize: 1 },
							grid: { color: "lightgray" } , // color of grid lines
						},
					},
					line: { borderColor: [ "rgba(20,220,220,.8)" , "rgba(220,120,120,.8)", "rgba(20,120,220,.8)" ], "borderDash": [ [5,10], [0,0] ] }, 
					bar: { backgroundColor: [ "rgba(20,220,220,.8)" , "rgba(220,120,120,.8)", "rgba(20,120,220,.8)" ]}, 
					pie: { backgroundColor: [ ["rgba(0,0,0,.8)" , "rgba(220,20,20,.8)", "rgba(20,220,20,.8)", "rgba(220,220,20,.8)", "rgba(20,20,220,.8)"] ]},
					radar: { borderColor: [ "rgba(20,220,220,.8)" , "rgba(220,120,120,.8)", "rgba(20,120,220,.8)" ]}, 
			},
			math: {
				mathjax: 'https://cdn.jsdelivr.net/gh/mathjax/mathjax@2.7.8/MathJax.js',
				config: 'TeX-AMS_HTML-full',
				// pass other options into `MathJax.Hub.Config()`
				TeX: { Macros: { RR: "{\\bf R}" } }
				},
			// Learn about plugins: https://revealjs.com/plugins/
			plugins: (window.location.search.match(/print-pdf/gi) ? printPlugins : plugins ) 
		});
			


	    // Change chalkboard theme : 
		function changeTheme(input) {
			var config = {};
			config.theme = input.value;
			Reveal.getPlugin("RevealChalkboard").configure(config);
			input.blur();
		}

		// // Handle the message inside the webview
        // window.addEventListener('message', event => {

        //     const message = event.data; // The JSON data our extension sent

        //     switch (message.command) {
        //         case 'refactor':
        //             Reveal.toggleHelp();
        //     }
        // });

		if (window.location.search.match(/print-pdf-now/gi)) {
      		setTimeout(() => {
				window.print();
			  }, 2500);
			
    }
		

	</script>

</body>

</html>